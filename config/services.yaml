# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.api.params:
        class: App\Service\BagParameterService
        arguments: ["@doctrine.orm.entity_manager", "@app.api.cache", "%kernel.environment%"]
        public: true

    app.api.cache:
        class: App\Service\CacheService
        arguments: ["api.params"]
        public: true

    app.api.format.path:
        class: App\Service\FormatPathService
        arguments: ["@app.api.cache", "@app.api.params"]
        public: true

    app.api.format.menu:
        class: App\Service\FormatMenuService
        arguments: ["@app.api.format.path", "@app.api.params", "@router"]
        public: true

    app.api.format.read:
        class: App\Service\FormatReadFileService
        arguments: ["@filesystem", "@app.api.params"]
        public: true

    app.api.read.file:
        class: App\Service\ReadFileService
        arguments: ["@app.api.format.read"]
        public: true

    app.api.show:
        class: App\Service\ShowService
        arguments: ["@app.api.format.path", "@app.api.cache", "@app.api.params", "@app.api.show.format.dashboard", "@app.api.show.format.campaign", "@app.api.show.format.campaign.file", "@app.api.show.format.trade.file", "@app.api.read.log", "@router"]
        public: true

    app.api.show.format.dashboard:
        class: App\Service\ShowAccountDashboardFormat
        arguments: ["@filesystem", "@app.api.format.path", "@app.api.read.file"]
        public: true

    app.api.show.format.campaign:
        class: App\Service\ShowCampaignFormat
        arguments: ["@filesystem", "@app.api.format.path", "@app.api.read.file"]
        public: true

    app.api.show.format.campaign.file:
        class: App\Service\ShowCampaignFileFormat
        arguments: ["@filesystem", "@app.api.format.path", "@app.api.read.file"]
        public: true

    app.api.show.format.trade.file:
        class: App\Service\ShowTradeFormat
        arguments: ["@filesystem", "@app.api.format.path", "@app.api.read.file"]
        public: true

    app.api.read.log:
        class: App\Service\ReadLogService
        arguments: ["@filesystem", "@app.api.params"]
        public: true

